@model WineTasting.Models.Wine.WineCreate

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>WineCreate</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.OwnerId)
        @Html.HiddenFor(model => model.WineId)

        <h3> For the following Tasting:</h3>
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.TastingId)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.TastingId)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.TastingDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.TastingDate)
            </dd>

        </dl>
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubBrand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SubBrand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubBrand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WineVarietal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.WineVarietal, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.WineVarietal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Region, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Region, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Region, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodeForBlindTasting, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.CodeForBlindTasting, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CodeForBlindTasting, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    <div>

        @Html.ActionLink("Back to Tasting List", "Index", "Tasting") |
        @Html.ActionLink("Back to Wine to List", "Index", "Wine", new { Model.TastingId }, null)

    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@*
    @Html.ActionLink("Wine List", "Index", "Wine", new { item.TastingId }, null)
*@